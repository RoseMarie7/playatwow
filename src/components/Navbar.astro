---
// Static pathname logic is needed to determine which navigation item is underlined upon initial page load/reload
const { pathname } = Astro.url;
---

<nav class="navbar sticky top-0 z-50 bg-base-100 pr-4 shadow-lg">
  <div class="flex-none">
    <a href="/">
      <img src="/logo-round.webp" alt="logo" width="100" height="100" />
    </a>
  </div>
  <ul class="ml-auto hidden lg:flex">
    <li><a href="/" class={`${pathname === "/" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Home</a></li>
    <li><a href="/about" class={`${pathname.replace(/\/$/, "") === "/about" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>About</a></li>
    <li><a href="/core-beliefs" class={`${pathname.replace(/\/$/, "") === "/core-beliefs" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Beliefs</a></li>
    <li><a href="/services" class={`${pathname.replace(/\/$/, "") === "/services" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Services</a></li>
    <li><a href="/programs" class={`${pathname.replace(/\/$/, "") === "/programs" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Programs</a></li>
    <li><a href="/blog" class={`${pathname.replace(/\/$/, "") === "/blog" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Blog</a></li>
    <li><a href="/community" class={`${pathname.replace(/\/$/, "") === "/community" ? "underline" : "no-underline"} btn btn-link text-black hover:text-[#c49800] normal-case text-lg`}>Community</a></li>
    <li><a href="/contact" class={`${pathname.replace(/\/$/, "") === "/contact" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`}>Contact</a></li>
  </ul>
  <!-- Mobile menu toggle -->
  <div class="drawer drawer-end lg:hidden">
    <input id="my-drawer" type="checkbox" class="drawer-toggle" />
    <div class="drawer-content ml-auto">
      <!-- Page content here -->
      <label for="my-drawer" aria-label="open sidebar" class="btn btn-square btn-ghost">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          class="inline-block h-16 w-16 stroke-current"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          ></path>
        </svg>
      </label>
    </div>
    <div class="drawer-side">
      <label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
      <ul class="menu bg-base-200 text-base-content min-h-full w-80 p-4">
        <!-- Sidebar content here -->
        <li><a class={`${pathname === "/" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/">Home</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/about" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/about">About</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/core-beliefs" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/core-beliefs">Beliefs</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/services" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/services">Services</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/programs" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/programs">Programs</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/blog" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/blog">Blog</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/community" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/community">Community</a></li>
        <li><a class={`${pathname.replace(/\/$/, "") === "/contact" ? "underline" : "no-underline"} btn btn-link justify-start text-black hover:text-[#c49800] normal-case text-lg`} href="/contact">Contact</a></li>
      </ul>
    </div>
  </div>
</nav>

<script>
  // EmailJS logic is here to integrate listeners with Swup
  // The EmailJS object is retrieved from a CDN on the root layout
  // https://dashboard.emailjs.com/admin/account
  // @ts-ignore
  let isSendingEmail = false;
  const handleContactForm: EventListener = (event) => {
    event.preventDefault();
    if (isSendingEmail) {
      return;
    }
    isSendingEmail = true;
    // Get reference to submit button
    const submitButton = (event.target as HTMLFormElement).querySelector<HTMLInputElement>('input[type="submit"]');
    if (submitButton) {
      submitButton.disabled = true;
      submitButton.value = "Sending...";
    }
    // these IDs are set on EmailJS
    // @ts-ignore
    emailjs.sendForm('contact_service', 'contact_form', this, {
    publicKey: "P99qXE2fWdGv6qKle",
    limitRate: {
      // Allow 1 request per 2s
      throttle: 2000,
    },
  })
      .then(() => {
        console.log('SUCCESS!');
        if (submitButton) {
          submitButton.value = "Message Sent!";
          submitButton.disabled = false;
          submitButton.classList.remove('btn-primary');
          submitButton.classList.add('btn-success');
        }
        // Reset after short delay
        setTimeout(() => {
          if (submitButton) {
            submitButton.value = "Send";
            submitButton.classList.remove('btn-success');
            submitButton.classList.add('btn-primary');
          }
          isSendingEmail = false;
        }, 2000);
      }, (error: any) => {
        console.log('FAILED...', error);
        if (submitButton) {
          submitButton.value = "Failed. Please try again.";
          submitButton.disabled = false;
          submitButton.classList.remove('btn-primary');
          submitButton.classList.add('btn-error');
        }
        // Reset after short delay
        setTimeout(() => {
          if (submitButton) {
            submitButton.value = "Send";
            submitButton.classList.remove('btn-error');
            submitButton.classList.add('btn-primary');
          }
          isSendingEmail = false;
        }, 2000);
      }
    );
  }
  // Ensure that Swup does not trigger setup more than once
  if (!(window as any)._contactFormInitialized) {
    (window as any)._contactFormInitialized = true;
    // Controls which navigation item is underlined upon page change and emailjs setup
    // Details found at: https://github.com/swup/astro?tab=readme-ov-file#access-to-the-swup-instance
    const setup = () => {
      // Add event listener to contact form on page load/reload
      if (window.location.pathname.replace(/\/$/, "") === "/contact") {
        document.getElementById('contact-form')?.addEventListener('submit', handleContactForm)
      }

      const swup = (window as typeof window & { swup: import('swup').default }).swup;
      swup.hooks.on('visit:start', (visit) => {
        // Close the mobile drawer if it's open
        const drawerToggle = document.querySelector<HTMLInputElement>('#my-drawer');
        if (drawerToggle && drawerToggle.checked) {
          drawerToggle.checked = false;
        }
        // Remove underline from previous page links
        const previousPage = visit.from.url.replace(/\/$/, "") || "/"
        const previousNavigation = document.querySelectorAll(`li a[href="${previousPage}"]`)
        if (previousNavigation) {
          previousNavigation.forEach(navigation => navigation.classList.remove('underline'))
          previousNavigation.forEach(navigation => navigation.classList.add('no-underline'))
        }
        // Add underline to current page links
        const currentPage = visit.to.url.replace(/\/$/, "") || "/"
        const currentNavigation = document.querySelectorAll(`li a[href="${currentPage}"]`)
        if (currentNavigation) {
          currentNavigation.forEach(navigation => navigation.classList.remove('no-underline'))
          currentNavigation.forEach(navigation => navigation.classList.add('underline'))
        }
      })
      // Add event listener to contact form on page change
      swup.hooks.on('visit:end', (visit) => {
        const isContactPage = visit.to.url.replace(/\/$/, "") === "/contact"
        if (isContactPage) {
          // Remove before adding to enssure there are no duplicate listeners
          document.getElementById('contact-form')?.removeEventListener('submit', handleContactForm);
          document.getElementById('contact-form')?.addEventListener('submit', handleContactForm)
        }
      })
      console.log('setup complete')
    }
    if ("swup" in window) {
      setup()
    } else {
      document.addEventListener('swup:enable', setup)
    }
  }
</script>